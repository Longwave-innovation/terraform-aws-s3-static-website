name: Generate terraform docs
on:
  pull_request:
    branches: [ main ]
    paths:
    - '**.tf'
    - '**.hcl'
    - '.terraform.lock.hcl'
    - '**.md'
    - '.github/workflows/documentation.yaml'

jobs:

  tf-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Git identity
      run: |
        git config --global user.email "innovation_r&d@lantechlongwave.it"
        git config --global user.name "ActionBot"

    - name: Render terraform docs inside the README.md and push changes back to PR branch
      uses: terraform-docs/gh-actions@v1.3.0
      with:
        working-dir: .
        config-file: .terraform-docs.yaml
        git-push: "true"
        git-commit-message: "docs: terraform-docs automated update"

    - name: Updating Table Of Contents
      uses: technote-space/toc-generator@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        TOC_TITLE: ''
        TARGET_PATHS: 'README*.md, **/README*.md'

    - name: Committing changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "[skip ci] terraform-docs: Update DOCUMENTATION and TOC"
        branch: ${{ github.event.pull_request.head.ref }}

  lint-markdown:
    needs: [ tf-docs ]
    runs-on: ubuntu-latest
    steps:
    - run: echo "The job was automatically triggered by a ${{ github.event_name }} event made by ${{ github.actor }}."
    - run: echo "This job is now running on a ${{ runner.os }} server hosted by Gitea!"
    - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    - name: Installing markdownlint and test

      run: |
        npm install -g markdownlint-cli
        markdownlint --version

    - name: Check out repository code
      uses: actions/checkout@v4

    - run: echo "The ${{ github.repository }} repository has been cloned to the runner."

    - name: Moving the script into the git folder
      run: cd ${{ github.workspace }}

    - name: Checking markdown linting errors
      id: markdown_linting
      # Preventing the command to exit as soon as there's an exit code != 0 with `set +e`
      # Save the exit code of the command and use it with the comamnd `exit`` at the end of step
      run: |
        markdownlint '**/*.md' --ignore node_modules -o linting_errors.html

    - name: See content of linting_errors.html
      if: ${{ failure() }}
      run: |
        cat linting_errors.html

    - run: echo "This job's status is ${{ job.status }}."
